
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Tabulate statistics and make graphs for the AEA data editor report
> # Lars Vilhuber
> # - This reformats tables created from the ScholarOne system 
> # - Source data is confidential.
> # 2/18/2021
> 
> # Inputs
> #   - file.path(basepath,"data","scholarone","dataEditorReport_20191128-20201127.xlsx") 
> # Outputs
> #   - Tables
> 
> 
> ### Load libraries 
> ### Requirements: have library *here*
> source(here::here("global-libraries.R"),echo=TRUE)

> options(repos = c(REPO_NAME = "https://packagemanager.rstudio.com/all/__linux__/focal/2021-12-01+MTo2NjQ1NDU1LDI6NDUyNjIxNTtCRjhCNTA0Mw"))

> pkgTest <- function(x) {
+     if (!require(x, character.only = TRUE)) {
+         install.packages(x, dep = TRUE)
+         if (!require(x, charact .... [TRUNCATED] 

> pkgTest.github <- function(libname, source, pkgname = libname) {
+     if (!require(libname, character.only = TRUE)) {
+         if (pkgname == "")  .... [TRUNCATED] 

> global.libraries <- c("dplyr", "here", "tidyr", "tibble", 
+     "stringr", "readr", "splitstackshape", "digest", "remotes", 
+     "readxl", "ggplo ..." ... [TRUNCATED] 

> results <- sapply(as.list(global.libraries), pkgTest)
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: here
here() starts at /home/rstudio
Loading required package: tidyr
Loading required package: tibble
Loading required package: stringr
Loading required package: readr
Loading required package: splitstackshape
Loading required package: digest
Loading required package: remotes
Loading required package: readxl
Loading required package: ggplot2
Loading required package: ggthemes

> pkgTest.github("data.table", "Rdatatable")
Loading required package: data.table

Attaching package: ‘data.table’

The following objects are masked from ‘package:dplyr’:

    between, first, last

[1] "OK"

> pkgTest.github("stargazer", "markwestcott34", "stargazer-booktabs")
Loading required package: stargazer

Please cite as: 

 Hlavac, Marek (2015). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2. http://CRAN.R-project.org/package=stargazer 

[1] "OK"
> source(here::here("programs","config.R"),echo=TRUE)

> process_anon <- TRUE

> download_anon <- TRUE

> firstday <- "2020-12-01"

> lastday <- "2021-11-30"

> basepath <- here::here()

> setwd(basepath)

> jiraanon <- file.path(basepath, "data", "jira", "anon")

> manual <- file.path(basepath, "data", "manual")

> icpsrbase <- file.path(basepath, "data", "icpsr")

> jira.anon.name <- file.path(jiraanon, "jira.anon.RDS")

> jira.anon.sha256 <- "73c92a3ff1d4f5ee5cedd2bf05c5940ca900f621c2e9358bf3e3a3149519ae7c"

> jira.anon.sha512 <- "c8d828bc34bb965a57aab0e4446e0b06b7e55329f0600a4bb8e6d2d75908f4c14340a9f7ea6fe4e6eae103ffdb1d019aab313956be52c6971bf3c89633ecc31 ..." ... [TRUNCATED] 

> jira.anon.urlbase <- "https://raw.githubusercontent.com/AEADataEditor/processing-jira-process-data/698c61395a86df31aa064b843c0e08a67bd64358/data/"

> jira.anon.url <- paste0(jira.anon.urlbase, "anon/jira.anon.RDS")

> jira.members.url <- paste0(jira.anon.urlbase, "replicationlab_members.txt")

> jira.members.name <- file.path(jiraanon, "replicationlab_members.txt")

> noncompliance.name <- file.path(manual, "noncompliance.xlsx")

> scholarone.name <- file.path(basepath, "data", "scholarone", 
+     "dataEditorReport_20201128-20211127Revised.xlsx")

> scholarone.skip <- 33

> images <- file.path(basepath, "images")

> tables <- file.path(basepath, "tables")

> programs <- file.path(basepath, "programs")

> temp <- file.path(basepath, "data", "temp")

> latexnums.Rda <- file.path(tables, "latexnums.Rda")

> latexnums.tex <- file.path(tables, "latexnums.tex")

> for (dir in list(images, tables, programs, temp)) {
+     if (file.exists(dir)) {
+     }
+     else {
+         dir.create(file.path(dir))
+     }
 .... [TRUNCATED] 

> set.seed(20201201)

> pkgTest("tibble")
[1] "OK"

> if (file.exists(latexnums.Rda)) {
+     print(paste0("File for export to LaTeX found: ", latexnums.Rda))
+ } else {
+     latexnums <- tibble(field  .... [TRUNCATED] 
[1] "File for export to LaTeX found: /home/rstudio/tables/latexnums.Rda"

> update_latexnums <- function(field, value) {
+     latexnums <- readRDS(latexnums.Rda)
+     if (any(latexnums$field == field)) {
+         message( .... [TRUNCATED] 
> 
> 
> ## Non-standard - install of a page with same name
> #pkgTest.github("stargazer-booktabs","markwestcott34")
> library(stargazer)
> 
> # Get Median number of rounds
> 
> ## Get list of journals
> 
> 
> jira.journals <- readRDS(jira.anon.name)  %>%
+             distinct(Journal) %>%
+             filter(! Journal %in% c("JEP","JEL","","AEA P&P")) %>%
+             mutate(Journal = str_replace(Journal,":"," "),
+                    Journal = str_replace(Journal," Economics",""),
+                    Journal = str_replace(Journal," Economic","")) 
> 
> # diagnostics
> 
> jira.journals
       Journal
1  AEJ Applied
2   AEJ Policy
3    AEJ Micro
4 AER Insights
5          AER
6    AEJ Macro
> 
> ## cycle over journals
> 
> read_scholarone <- function(filename,skip) {
+   rounds <- tibble()
+   for ( j in as.list(jira.journals$Journal)) {
+     print(paste0("Reading in ",j))
+     so <- read_excel(filename,
+                      sheet = j, skip = skip, n_max = 3) %>% 
+       select(Rounds = `Total Rounds`,Count = `Manuscripts`) %>%
+       mutate(Journal = j,
+              jorder  = if_else(substr(j,1,3)=="AER",0,1))
+     rounds <- bind_rows(rounds,so)
+     print(so)
+   }
+   rounds <- rounds %>% 
+     arrange(jorder,Journal) %>%
+     select(Journal,Rounds,Count)
+   return(rounds)
+ }
> 
> rounds <- read_scholarone(scholarone.name,scholarone.skip) 
[1] "Reading in AEJ Applied"
# A tibble: 2 × 4
  Rounds Count Journal     jorder
   <dbl> <dbl> <chr>        <dbl>
1      1    37 AEJ Applied      1
2      2     9 AEJ Applied      1
[1] "Reading in AEJ Policy"
# A tibble: 3 × 4
  Rounds Count Journal    jorder
   <dbl> <dbl> <chr>       <dbl>
1      1    57 AEJ Policy      1
2      2    14 AEJ Policy      1
3      3     1 AEJ Policy      1
[1] "Reading in AEJ Micro"
# A tibble: 3 × 4
  Rounds Count Journal   jorder
   <dbl> <dbl> <chr>      <dbl>
1      1    14 AEJ Micro      1
2      2     8 AEJ Micro      1
3      3     1 AEJ Micro      1
[1] "Reading in AER Insights"
# A tibble: 2 × 4
  Rounds Count Journal      jorder
   <dbl> <dbl> <chr>         <dbl>
1      1    18 AER Insights      0
2      2     3 AER Insights      0
[1] "Reading in AER"
# A tibble: 2 × 4
  Rounds Count Journal jorder
   <dbl> <dbl> <chr>    <dbl>
1      1    69 AER          0
2      2    11 AER          0
[1] "Reading in AEJ Macro"
# A tibble: 2 × 4
  Rounds Count Journal   jorder
   <dbl> <dbl> <chr>      <dbl>
1      1    15 AEJ Macro      1
2      2    13 AEJ Macro      1
> 
> # we also want to read back in the previous year. This is custom code here.
> # This file is not provided as part of the replication package, as it is 
> # available in the previous year's repository
> scholarone.pname <- file.path(basepath,"data","scholarone","dataEditorReport_20191128-20201127.xlsx")
> scholarone.pskip <- 30
> rounds.pyear <- read_scholarone(scholarone.pname,scholarone.pskip) %>% 
+   mutate(reportyear=2020)
[1] "Reading in AEJ Applied"
# A tibble: 3 × 4
  Rounds Count Journal     jorder
   <dbl> <dbl> <chr>        <dbl>
1      1    22 AEJ Applied      1
2      2    20 AEJ Applied      1
3      3     3 AEJ Applied      1
[1] "Reading in AEJ Policy"
# A tibble: 3 × 4
  Rounds Count Journal    jorder
   <dbl> <dbl> <chr>       <dbl>
1      1    20 AEJ Policy      1
2      2    31 AEJ Policy      1
3      3     7 AEJ Policy      1
[1] "Reading in AEJ Micro"
# A tibble: 3 × 4
  Rounds Count Journal   jorder
   <dbl> <dbl> <chr>      <dbl>
1      1    15 AEJ Micro      1
2      2    21 AEJ Micro      1
3      3     5 AEJ Micro      1
[1] "Reading in AER Insights"
# A tibble: 3 × 4
  Rounds Count Journal      jorder
   <dbl> <dbl> <chr>         <dbl>
1      1     7 AER Insights      0
2      2    16 AER Insights      0
3      3     2 AER Insights      0
[1] "Reading in AER"
# A tibble: 3 × 4
  Rounds Count Journal jorder
   <dbl> <dbl> <chr>    <dbl>
1      1    26 AER          0
2      2    47 AER          0
3      3     9 AER          0
[1] "Reading in AEJ Macro"
# A tibble: 3 × 4
  Rounds Count Journal   jorder
   <dbl> <dbl> <chr>      <dbl>
1      1     4 AEJ Macro      1
2      2    35 AEJ Macro      1
3      3     8 AEJ Macro      1
> 
> # summarize
> 
> rounds.all <- rounds %>%
+   group_by(Rounds) %>%
+   summarize(Count = sum(Count)) %>%
+   ungroup() %>%
+   arrange(Rounds) %>%
+   mutate(CPercent = cumsum(100*Count/sum(Count)),
+          Percent = round(100*Count/sum(Count),1))
> 
> 
> rounds.pall <- rounds.pyear %>%
+   group_by(Rounds) %>%
+   summarize(Count = sum(Count)) %>%
+   ungroup() %>%
+   arrange(Rounds) %>%
+   mutate(CPercent = cumsum(100*Count/sum(Count)),
+          Percent = round(100*Count/sum(Count),1))
> 
> # pre-aggregated - which is the median?
> 
> median <- NA
> pmedian <- NA
> 
> for ( row in 1:nrow(rounds.all) ) {
+   print(paste0(row))
+   if ( rounds.all$CPercent[row] > 50 & is.na(median) ) {
+     median = rounds.all$Rounds[row]
+   }
+ }
[1] "1"
[1] "2"
[1] "3"
> 
> for ( row in 1:nrow(rounds.pall) ) {
+   print(paste0(row))
+   if ( rounds.all$CPercent[row] > 50 & is.na(pmedian) ) {
+     pmedian = rounds.all$Rounds[row]
+   }
+ }
[1] "1"
[1] "2"
[1] "3"
> 
> update_latexnums("medianrounds",median)
Updating existing field medianrounds
> update_latexnums("pmedianrounds",pmedian)
Updating existing field pmedianrounds
> update_latexnums("roundone",rounds.all$Percent[1])
Updating existing field roundone
> update_latexnums("proundone",rounds.pall$Percent[1])
Updating existing field proundone
> update_latexnums("roundthree",rounds.all$Percent[3])
Updating existing field roundthree
> update_latexnums("proundthree",rounds.pall$Percent[3])
Updating existing field proundthree
> 
> 
> # create table
> 
> rounds.wide <- rounds %>%
+   select(Journal,Rounds,Count) %>%
+   pivot_wider(names_from = Journal,
+               values_from = Count,
+               values_fill = 0)
> 
> stargazer(rounds.wide,style = "aer",
+           summary = FALSE,
+           out = file.path(tables,"n_rounds.tex"),
+           out.header = FALSE,
+           float = FALSE,
+           rownames = FALSE
+ )

% Table created by stargazer v.5.2 by Marek Hlavac, Harvard University. E-mail: hlavac at fas.harvard.edu
% Date and time: Wed, Jun 01, 2022 - 02:08:00 PM
\begin{tabular}{@{\extracolsep{5pt}} ccccccc} 
\toprule 
Rounds & AER & AER Insights & AEJ Applied & AEJ Macro & AEJ Micro & AEJ Policy \\ 
\midrule 1 & 69 & 18 & 37 & 15 & 14 & 57 \\ 
2 & 11 & 3 & 9 & 13 & 8 & 14 \\ 
3 & 0 & 0 & 0 & 0 & 1 & 1 \\ 
\bottomrule 
\end{tabular} 
> 
> # Merge with previous year to generate figure
> # to convince ggplot to do the right stacked chart, we need the percentages pre-calculated
> # We also go wide then narrow to get zeros
> 
> rounds.pwide <- rounds.pyear %>%
+   select(Journal,Rounds,Count) %>%
+   pivot_wider(names_from = Journal,
+               values_from = Count,
+               values_fill = 0) %>%
+   pivot_longer(cols = starts_with("A"),
+                names_to = "Journal",
+                values_to = "Count") %>%
+   mutate(reportyear=2020)
> 
> 
> rounds.years <- bind_rows(rounds.wide %>%
+                           pivot_longer(cols = starts_with("A"),
+                                        names_to = "Journal",
+                                        values_to = "Count") %>%
+   mutate(reportyear=2021),rounds.pwide) %>%
+   arrange(reportyear) %>%
+   group_by(reportyear,Journal) %>%
+   mutate(fraction = round(100*Count/sum(Count),0),
+          Rounds=as.factor(Rounds)) 
> 
> rounds.plot <- ggplot(rounds.years,aes(y=fraction,x=Journal,fill=Rounds,group=reportyear)) + 
+   geom_bar(stat='identity') + 
+   scale_x_discrete(guide = guide_axis(n.dodge=2))+
+   theme_tufte() +
+   scale_fill_brewer(palette="Paired") +
+   labs(y=element_blank()) +
+   facet_grid(~ reportyear)
> 
> 
> ggsave(file.path(images,"plot_rounds_compare.png"), 
+        rounds.plot +
+          labs(y=element_blank(),title=element_blank()),
+        width=7,height=3,units="in")
> 
> 
