
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Tabulate statistics and make graphs for the AEA data editor report
> # Harry Son
> # 2/18/2021
> 
> # Inputs
> #   - file.path(jiraanon,"jira.anon.RDS") 
> #   - file.path(temp,"jira.others.RDS)
> # Outputs
> 
> 
> ### Load libraries 
> ### Requirements: have library *here*
> source(here::here("global-libraries.R"),echo=TRUE)

> options(repos = c(REPO_NAME = "https://packagemanager.rstudio.com/all/__linux__/focal/2021-12-01+MTo2NjQ1NDU1LDI6NDUyNjIxNTtCRjhCNTA0Mw"))

> pkgTest <- function(x) {
+     if (!require(x, character.only = TRUE)) {
+         install.packages(x, dep = TRUE)
+         if (!require(x, charact .... [TRUNCATED] 

> pkgTest.github <- function(libname, source, pkgname = libname) {
+     if (!require(libname, character.only = TRUE)) {
+         if (pkgname == "")  .... [TRUNCATED] 

> global.libraries <- c("dplyr", "here", "tidyr", "tibble", 
+     "stringr", "readr", "splitstackshape", "digest", "remotes", 
+     "readxl", "ggplo ..." ... [TRUNCATED] 

> results <- sapply(as.list(global.libraries), pkgTest)
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: here
here() starts at /home/rstudio
Loading required package: tidyr
Loading required package: tibble
Loading required package: stringr
Loading required package: readr
Loading required package: splitstackshape
Loading required package: digest
Loading required package: remotes
Loading required package: readxl
Loading required package: ggplot2
Loading required package: ggthemes

> pkgTest.github("data.table", "Rdatatable")
Loading required package: data.table

Attaching package: ‘data.table’

The following objects are masked from ‘package:dplyr’:

    between, first, last

[1] "OK"

> pkgTest.github("stargazer", "markwestcott34", "stargazer-booktabs")
Loading required package: stargazer

Please cite as: 

 Hlavac, Marek (2015). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2. http://CRAN.R-project.org/package=stargazer 

[1] "OK"
> source(here::here("programs","config.R"),echo=TRUE)

> process_anon <- TRUE

> download_anon <- TRUE

> firstday <- "2020-12-01"

> lastday <- "2021-11-30"

> basepath <- here::here()

> setwd(basepath)

> jiraanon <- file.path(basepath, "data", "jira", "anon")

> manual <- file.path(basepath, "data", "manual")

> icpsrbase <- file.path(basepath, "data", "icpsr")

> jira.anon.name <- file.path(jiraanon, "jira.anon.RDS")

> jira.anon.sha256 <- "73c92a3ff1d4f5ee5cedd2bf05c5940ca900f621c2e9358bf3e3a3149519ae7c"

> jira.anon.sha512 <- "c8d828bc34bb965a57aab0e4446e0b06b7e55329f0600a4bb8e6d2d75908f4c14340a9f7ea6fe4e6eae103ffdb1d019aab313956be52c6971bf3c89633ecc31 ..." ... [TRUNCATED] 

> jira.anon.urlbase <- "https://raw.githubusercontent.com/AEADataEditor/processing-jira-process-data/698c61395a86df31aa064b843c0e08a67bd64358/data/"

> jira.anon.url <- paste0(jira.anon.urlbase, "anon/jira.anon.RDS")

> jira.members.url <- paste0(jira.anon.urlbase, "replicationlab_members.txt")

> jira.members.name <- file.path(jiraanon, "replicationlab_members.txt")

> noncompliance.name <- file.path(manual, "noncompliance.xlsx")

> scholarone.name <- file.path(basepath, "data", "scholarone", 
+     "dataEditorReport_20201128-20211127Revised.xlsx")

> scholarone.skip <- 33

> images <- file.path(basepath, "images")

> tables <- file.path(basepath, "tables")

> programs <- file.path(basepath, "programs")

> temp <- file.path(basepath, "data", "temp")

> latexnums.Rda <- file.path(tables, "latexnums.Rda")

> latexnums.tex <- file.path(tables, "latexnums.tex")

> for (dir in list(images, tables, programs, temp)) {
+     if (file.exists(dir)) {
+     }
+     else {
+         dir.create(file.path(dir))
+     }
 .... [TRUNCATED] 

> set.seed(20201201)

> pkgTest("tibble")
[1] "OK"

> if (file.exists(latexnums.Rda)) {
+     print(paste0("File for export to LaTeX found: ", latexnums.Rda))
+ } else {
+     latexnums <- tibble(field  .... [TRUNCATED] 
[1] "File for export to LaTeX found: /home/rstudio/tables/latexnums.Rda"

> update_latexnums <- function(field, value) {
+     latexnums <- readRDS(latexnums.Rda)
+     if (any(latexnums$field == field)) {
+         message( .... [TRUNCATED] 
> 
> ## Non-standard - install of a page with same name
> library(stargazer)
> 
> # Get the data
> # Read in data extracted from openICPSR,
> # This varies from year to year
> 
> readin <- tibble()
> for ( j in 1:11 ) {
+   print(paste0("Reading in Part",j))
+   so <- read.csv(file.path(icpsrbase,paste0("Part",j,"Of11.csv")),as.is = TRUE,strip.white=TRUE)
+   readin <- bind_rows(readin,so)
+ }
[1] "Reading in Part1"
[1] "Reading in Part2"
[1] "Reading in Part3"
[1] "Reading in Part4"
[1] "Reading in Part5"
[1] "Reading in Part6"
[1] "Reading in Part7"
[1] "Reading in Part8"
[1] "Reading in Part9"
[1] "Reading in Part10"
[1] "Reading in Part11"
> 
> # cleanup
> icpsr <- readin %>%
+   select(Project.ID              = maxIdentifier,
+          openICPSR.title         = maxTitle,
+          fileCount,
+          Total.File.Size         = size,
+          openICPSR.pubDate       = maxCreated,
+          Created.Date            = maxFedCreated,
+   )
> 
> ## Distribution of replication packages
> icpsr.file_size <- icpsr %>% 
+   distinct(Project.ID,.keep_all = TRUE) %>%
+   cSplit("Created.Date","T") %>%
+   mutate(date_created=as.Date(substr(Created.Date_1, 1,10), "%Y-%m-%d")) %>%
+   filter(date_created >= as.Date(firstday)-30, date_created <= lastday) %>%
+   transform(filesize=Total.File.Size/(1024^3)) %>% # in GB
+   transform(filesizemb=Total.File.Size/(1024^2)) %>% # in MB
+   transform(intfilesize=round(filesize))
Warning messages:
1: In type.convert.default(X[[i]], ...) :
  'as.is' should be specified by the caller; using TRUE
2: In type.convert.default(X[[i]], ...) :
  'as.is' should be specified by the caller; using TRUE
> 
> # get some stats
> icpsr.file_size %>% 
+   summarize(mean=round(mean(filesize),2),
+             median=round(median(filesize),2),
+             q75=round(quantile(filesize,0.9),2)) -> icpsr.stats.gb
> 
> icpsr.file_size %>% 
+     summarize(mean=round(mean(filesizemb),2),
+             median=round(median(filesizemb),2),
+             q75=round(quantile(filesizemb,0.9),2)) -> icpsr.stats.mb
>   
> icpsr.file_size %>% 
+   group_by(intfilesize) %>% 
+   summarise(n=n()) %>% 
+   ungroup() %>% 
+   mutate(percent=100*n/sum(n)) -> icpsr.stats1
> 
> update_latexnums("pkgsizetwog",icpsr.stats1 %>% 
+                              filter(intfilesize > 2) %>% 
+                              summarize(percent=sum(percent)) %>% round(0))
Updating existing field pkgsizetwog
> update_latexnums("pkgsizetwentyg",icpsr.stats1 %>% 
+                               filter(intfilesize >19) %>% 
+                               summarize(percent=sum(percent)) %>% round(0))
Updating existing field pkgsizetwentyg
> 
> 
> update_latexnums("pkgsizemean",icpsr.stats.mb$mean)
Updating existing field pkgsizemean
> update_latexnums("pkgsizemedian",icpsr.stats.mb$median)
Updating existing field pkgsizemedian
> update_latexnums("pkgsizeqsvntyfv",icpsr.stats.mb$q75)
Updating existing field pkgsizeqsvntyfv
> 
> # graph it all
> 
> dist_size <- icpsr.file_size %>%
+   transform(intfilesize=pmin(round(filesize),10,na.rm = TRUE)) %>%
+   group_by(intfilesize) %>%
+   summarise(count=n())
> 
> 
> plot_filesize_dist <- ggplot(dist_size, aes(x = intfilesize,y=count)) +
+   geom_bar(stat="identity", colour="black", fill="grey")+
+   theme_classic() +
+   labs(x = "GB",
+        y = "Number of Packages", 
+        title = "Size distribution of replication packages")
> 
> ggsave(file.path(images,"plot_filesize_dist.png"), 
+        plot_filesize_dist  +
+          labs(y=element_blank(),title=element_blank()),
+        width=7,height=3,units="in")
> #plot_filesize_dist
> 
